name: Build Worker Files

on:
  push:
    branches:
      - main 
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Bundled & Obfuscated Files
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci
        
      - name: Install Wrangler
        run: npm install --save-dev wrangler@latest
        
      - name: Build Raw Bundled Worker
        id: build-raw
        run: |
          echo "Building raw worker bundle..."
          # Use wrangler build command which is specifically for building
          # It respects the 'main' field in wrangler.toml for entry
          # And outputs to the standard ./dist directory by default
          npx wrangler build 
          # Wrangler v4 build outputs to dist/_worker.js by default
          # Check if the output exists
          if [ ! -f dist/_worker.js ]; then
              echo "Build output dist/_worker.js not found!"
              # Try the older default if the above fails
              if [ -f dist/index.js ]; then
                  echo "Found dist/index.js instead, renaming..."
                  mv dist/index.js dist/_worker.js
              else
                  echo "No suitable build output found in dist/"
                  ls -la dist/ # List directory contents for debugging
                  exit 1
              fi
          fi
          # Rename the raw bundled file for clarity before committing
          mv dist/_worker.js dist/worker.raw.js
          echo "Raw bundled worker saved to dist/worker.raw.js"

      - name: Obfuscate Bundled Worker
        id: obfuscate
        run: |
          echo "Obfuscating dist/worker.raw.js..."
          # Input is the raw bundled file, output is the final obfuscated worker.js in the root
          npx javascript-obfuscator dist/worker.raw.js --output worker.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.75 \
            --dead-code-injection true \
            --dead-code-injection-threshold 0.4 \
            --debug-protection false \
            --debug-protection-interval 0 \
            --disable-console-output false \
            --identifier-names-generator hexadecimal \
            --log false \
            --numbers-to-expressions true \
            --rename-globals false \
            --self-defending false \
            --simplify true \
            --split-strings false \
            --string-array true \
            --string-array-calls-transform true \
            --string-array-encoding 'rc4' \
            --string-array-index-shift true \
            --string-array-rotate true \
            --string-array-shuffle true \
            --string-array-wrappers-count 1 \
            --string-array-wrappers-chained-calls true \
            --string-array-wrappers-parameters-max-count 2 \
            --string-array-wrappers-type 'variable' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --unicode-escape-sequence true
          echo "Obfuscated worker saved to ./worker.js (root)"
          # Also copy the obfuscated file to dist for consistency if desired
          cp worker.js dist/worker.obfuscated.js
          echo "Obfuscated worker also copied to dist/worker.obfuscated.js"


      - name: Commit Built Files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Build worker.js (obfuscated) and dist/worker.raw.js [skip ci]"
          # Commit both the obfuscated file in root and the raw file in dist
          file_pattern: "worker.js dist/worker.raw.js dist/worker.obfuscated.js"
          commit_user_name: GitHub Actions Bot
          commit_user_email: actions@github.com
          # Ensure it pushes the changes
          git push: true

      # --- Optional Deployment Step ---
      # This step only runs if secrets are available
      - name: Deploy Obfuscated Worker to Cloudflare (Optional)
        if: env.CLOUDFLARE_API_TOKEN != '' 
        run: |
          echo "Deploying pre-built, obfuscated worker (./worker.js) to Cloudflare..."
          # Deploy the specific obfuscated file
          # Add --format modules to tell Wrangler it's pre-built ES Module code
          npx wrangler deploy ./worker.js --format modules --name ${{ vars.WORKER_NAME || 'revil-zfn' }} # Use your worker name or variable
        env:
          # Use the standard environment variable name
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} 
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Optional vars for deployment context
          # CF_VAR_UUID: ${{ secrets.UUID || vars.UUID }}
          # CF_VAR_PROXYIP: ${{ secrets.PROXYIP || vars.PROXYIP }}
        continue-on-error: true
